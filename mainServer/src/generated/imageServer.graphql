# source: http://localhost:4001
# timestamp: Mon Apr 02 2018 09:33:25 GMT-0700 (MST)

type Image implements Node {
  id: ID!
  url: String
  postId: ID
}

enum ImageOrderByInput {
  id_ASC
  id_DESC
  url_ASC
  url_DESC
  postId_ASC
  postId_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

input ImageWhereInput {
  """Logical AND on all given filters."""
  AND: [ImageWhereInput!]

  """Logical OR on all given filters."""
  OR: [ImageWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  url: String

  """All values that are not equal to given value."""
  url_not: String

  """All values that are contained in given list."""
  url_in: [String!]

  """All values that are not contained in given list."""
  url_not_in: [String!]

  """All values less than the given value."""
  url_lt: String

  """All values less than or equal the given value."""
  url_lte: String

  """All values greater than the given value."""
  url_gt: String

  """All values greater than or equal the given value."""
  url_gte: String

  """All values containing the given string."""
  url_contains: String

  """All values not containing the given string."""
  url_not_contains: String

  """All values starting with the given string."""
  url_starts_with: String

  """All values not starting with the given string."""
  url_not_starts_with: String

  """All values ending with the given string."""
  url_ends_with: String

  """All values not ending with the given string."""
  url_not_ends_with: String
  postId: ID

  """All values that are not equal to given value."""
  postId_not: ID

  """All values that are contained in given list."""
  postId_in: [ID!]

  """All values that are not contained in given list."""
  postId_not_in: [ID!]

  """All values less than the given value."""
  postId_lt: ID

  """All values less than or equal the given value."""
  postId_lte: ID

  """All values greater than the given value."""
  postId_gt: ID

  """All values greater than or equal the given value."""
  postId_gte: ID

  """All values containing the given string."""
  postId_contains: ID

  """All values not containing the given string."""
  postId_not_contains: ID

  """All values starting with the given string."""
  postId_starts_with: ID

  """All values not starting with the given string."""
  postId_not_starts_with: ID

  """All values ending with the given string."""
  postId_ends_with: ID

  """All values not ending with the given string."""
  postId_not_ends_with: ID
}

"""An object with an ID"""
interface Node {
  """The id of the object."""
  id: ID!
}

type Query {
  images(where: ImageWhereInput, orderBy: ImageOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Image]!
}
